@page "/admission-status"
@using CollegeWebsite.Models
@using StudentModel = CollegeWebsite.Models.Student
@using DepartmentModel = CollegeWebsite.Models.Department
@using CollegeWebsite.Services
@inject StudentService StudentService
@inject DepartmentService DepartmentService
@inject NavigationManager NavigationManager

<h2>Check Admission Status</h2>

<div class="row">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h3>Enter Your Registration Number</h3>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <label for="registrationId" class="form-label">Registration ID</label>
                    <input type="text" id="registrationId" @bind="registrationId" class="form-control" />
                </div>

                <button type="button" @onclick="CheckStatus" class="btn btn-primary">Check Status</button>

                @if (statusChecked)
                {
                    @if (student != null)
                    {
                        <div class="alert alert-success mt-3">
                            <h4>Status: @student.AdmissionStatus</h4>
                            <p>Name: @student.FirstName @student.LastName</p>
                            <p>Department: @departmentName</p>
                            <!-- Display more details as needed -->
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-danger mt-3">
                            Registration ID not found.
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>

@code {
    private string registrationId = "";
    private StudentModel? student;
    private string? departmentName;
    private bool statusChecked = false;

    private async Task CheckStatus()
    {
        student = await StudentService.GetByStudentIdAsync(registrationId);
        statusChecked = true;

        if (student != null && !string.IsNullOrEmpty(student.DepartmentId))
        {
            var department = await DepartmentService.GetByIdAsync(student.DepartmentId);
            departmentName = department?.Name ?? "Unknown Department";
        }
    }
}