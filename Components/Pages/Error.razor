@page "/Error"
@using System.Diagnostics

<PageTitle>Error</PageTitle>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card border-danger">
                <div class="card-header bg-danger text-white">
                    <h2 class="mb-0">An Error Has Occurred</h2>
                </div>
                <div class="card-body">
                    <p class="lead">We apologize for the inconvenience. An unexpected error has occurred while
                        processing your request.</p>

                    @if (ShowRequestId)
                    {
                        <div class="alert alert-info">
                            <strong>Request ID:</strong> <code>@RequestId</code>
                        </div>
                    }

                    <div class="mt-4">
                        <h5>What you can do:</h5>
                        <ul>
                            <li>Try refreshing the page</li>
                            <li>Go back to the <a href="/" class="alert-link">home page</a></li>
                            <li>Try again later if the problem persists</li>
                            <li>Contact the administrator if you believe this is a system issue</li>
                        </ul>
                    </div>

                    <div class="mt-4">
                        <a href="javascript:history.back()" class="btn btn-primary">Go Back</a>
                        <a href="/" class="btn btn-outline-primary">Go Home</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<h3>Development Mode</h3>
<p>
    Swapping to <strong>Development</strong> environment will display more detailed information about the error that
    occurred.
</p>
<p>
    <strong>The Development environment shouldn't be enabled for deployed applications.</strong>
    It can result in displaying sensitive information from exceptions to end users.
    For local debugging, enable the <strong>Development</strong> environment by setting the
    <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>
    and restarting the app.
</p>

@code {
    [CascadingParameter]
    private HttpContext? HttpContext { get; set; }

    private string? RequestId { get; set; }
    private bool ShowRequestId => !string.IsNullOrEmpty(RequestId);

    protected override void OnInitialized() =>
    RequestId = Activity.Current?.Id ?? HttpContext?.TraceIdentifier;
}
